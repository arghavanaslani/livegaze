services:
  flask:
    build:
      context: .
      dockerfile: flask_app/Dockerfile
    container_name: flask_app
    ports:
      - "5100:5100"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./flask_app:/shared/flask_app
    restart: unless-stopped
    networks:
      - backend
      - frontend

  daemon:
    build: ./daemon
    container_name: daemon_service
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./flask_app:/shared/flask_app
    working_dir: /app
    restart: unless-stopped
    networks:
      - backend

  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./init_scripts/create_sequence.sql:/docker-entrypoint-initdb.d/db.sql
      - pgdata:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    restart: unless-stopped
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis_cache
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "127.0.0.1:6379:6379"
    restart: unless-stopped
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
  frontend:
